import asyncio
from os import listdir
from os.path import isfile, join
from random import randint
from unittest.mock import call
import logging

from aiogram import Bot, types
from aiogram.contrib.fsm_storage.memory import MemoryStorage
from aiogram.dispatcher import Dispatcher
from aiogram.types import ParseMode, ChatActions, InputMediaPhoto, InputMediaVideo, InlineKeyboardButton, \
    InputFile, ReplyKeyboardRemove, ReplyKeyboardMarkup, KeyboardButton, InlineKeyboardMarkup
from aiogram.utils import executor
from aiogram.utils.emoji import emojize
from aiogram.utils.markdown import pre

from config import TOKEN


bot = Bot(token=TOKEN)
dp = Dispatcher(bot)
Photo = InputFile("C:/Users/user/Desktop/–±–æ—Ç/icon.jpg")
Voice = InputFile("C:/Users/user/Desktop/–ü–ê–ü–ö–ê/1/–ê–±–æ–±–∞.mp3")


@dp.callback_query_handler(text="random_value")
async def send_random_value(call: types.CallbackQuery):
    await call.message.answer(str(randint(1, 10)))


@dp.message_handler(commands="random")
async def cmd_random(message: types.Message):
    keyboard = types.InlineKeyboardMarkup()
    keyboard.add(types.InlineKeyboardButton(text="–ù–∞–∂–º–∏ –º–µ–Ω—è", callback_data="random_value"))
    await message.answer("–ù–∞–∂–º–∏—Ç–µ –Ω–∞ –∫–Ω–æ–ø–∫—É, —á—Ç–æ–±—ã –±–æ—Ç –æ—Ç–ø—Ä–∞–≤–∏–ª —á–∏—Å–ª–æ –æ—Ç 1 –¥–æ 10", reply_markup=keyboard)


@dp.message_handler(commands=['start'])
async def process_start_command(message: types.Message):
    me = await bot.get_me()
    kb1 = types.InlineKeyboardMarkup()
    kb1.insert(types.InlineKeyboardButton(text="–ë–µ—Å–ø–ª–∞—Ç–Ω–∞—è –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—è", callback_data="Konsult"))
    kb1.add(types.InlineKeyboardButton(text="–û –∫–æ–º–ø–∞–Ω–∏–∏", callback_data="Company"))
    kb1.insert(types.InlineKeyboardButton(text="–°–æ–±—Ä–∞—Ç—å ü§ñ", callback_data="robot"))
    kb1.add(types.InlineKeyboardButton(text="ü§ñ –≤ –∫–æ—Ä–æ–±–∫–µ", callback_data="robot_box"))
    kb1.insert(types.InlineKeyboardButton(text="üî•–ü—Ä–µ–¥–æ–∂–µ–Ω–∏–µ", callback_data="offer"))
    kb1.add(types.InlineKeyboardButton(text="–ü—Ä–æ –±–æ—Ç N.", callback_data="bot_info"))
    kb1.insert(types.InlineKeyboardButton(text="–ö–æ–Ω—Ç–∞–∫—Ç—ã", callback_data="contacts"))
    kb1.add(types.InlineKeyboardButton(text="–ü–æ–¥–µ–ª–∏—Ç—Å—è", callback_data="share"))
    await bot.send_photo(message.from_user.id, InputFile("icon.jpg"), reply_markup=kb1, caption=f'''ü§ñ –ê–≤—Ç–æ–¥–∞–π–ª–µ—Ä ¬´–ë–æ—Ç N.¬ª
–ì–æ–ª–æ—Å–æ–≤–æ–π —Ä–æ–±–æ—Ç-–ø–æ–º–æ—â–Ω–∏–∫ –¥–ª—è –±–∏–∑–Ω–µ—Å–∞

üî•–ø–µ—Ä–µ–¥–∞–µ—Ç –≥–æ–ª–æ—Å–æ–≤—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è, —Ä–∞—Å–ø–æ–∑–Ω–∞–µ—Ç –æ—Ç–≤–µ—Ç—ã –ß–µ–ª–æ–≤–µ–∫–∞, –∞–Ω–∞–ª–∏–∑–∏—Ä—É–µ—Ç –∏ —É–º–µ–µ—Ç –≤–µ—Å—Ç–∏ –¥–∏–∞–ª–æ–≥
üî• —É–º–Ω—ã–π —Å–µ–∫—Ä–µ—Ç–∞—Ä—å –¥–ª—è –≤—Ö–æ–¥—è—â–∏—Ö –∑–≤–æ–Ω–∫–æ–≤

‚úì –æ–ø–æ–≤–µ—â–µ–Ω–∏–µ –æ–± –∞–∫—Ü–∏—è—Ö
‚úì –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏–µ –Ω–∞ –≤–µ–±–∏–Ω–∞—Ä/–º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–µ
‚úì –ø—Ä–æ–≤–µ–¥–µ–Ω–∏–µ –æ–ø—Ä–æ—Å–æ–≤, –∞–Ω–∫–µ—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ
‚úì —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏—è –±–∞–∑—ã –Ω–æ–º–µ—Ä–æ–≤
‚úì –ø–æ–≤—ã—à–µ–Ω–∏–µ –ª–æ—è–ª—å–Ω–æ—Å—Ç–∏ –∫–ª–∏–µ–Ω—Ç–æ–≤
‚úì –ª–∏–¥–æ–≥–µ–Ω–µ—Ä–∞—Ü–∏—è –∏ –º–Ω–æ–≥–æ–µ –¥—Ä—É–≥–æ–µ‚Ä¶
_____
{message.from_user.first_name}, –≤—ã–±–µ—Ä–∏—Ç–µ –ø—É–Ω–∫—Ç –º–µ–Ω—é üëáüèª''')


@dp.message_handler(commands=['help'])
async def process_help_command(message: types.Message):
    await message.reply("–ù–∞–ø–∏—à–∏ –º–Ω–µ —á—Ç–æ-–Ω–∏–±—É–¥—å, –∏ —è –æ—Ç–ø—Ä–ø–∞–≤–ª—é —ç—Ç–æ—Ç —Ç–µ–∫—Å—Ç —Ç–µ–±–µ –≤ –æ—Ç–≤–µ—Ç!")


if __name__ == '__main__':
    executor.start_polling(dp)



